{"is_source_file": true, "format": "JavaScript", "description": "A script for initializing MaxMind GeoIP databases by downloading a sample database or creating a mock database for development and testing purposes.", "external_files": ["../config", "../utils/logger"], "external_methods": [], "published": ["initializeGeoIP"], "classes": [], "methods": [{"name": "checkDatabaseExists", "description": "Checks if the GeoIP database file already exists."}, {"name": "createMockDatabase", "description": "Creates a mock GeoIP database with minimal placeholder data."}, {"name": "downloadSampleDatabase", "description": "Downloads a sample GeoIP database from a specified URL."}, {"name": "downloadOfficialDatabase", "description": "Downloads the official MaxMind GeoIP database using a provided license key."}, {"name": "initializeGeoIP", "description": "Main function to initialize the GeoIP database based on existence check and command line arguments."}], "calls": ["fs.existsSync", "fs.mkdirSync", "fs.writeFileSync", "fs.createWriteStream", "https.get", "logger.error", "logger.info", "logger.warn", "fs.unlinkSync", "fs.renameSync", "fs.createReadStream", "Extract"], "search-terms": ["GeoIP", "MaxMind", "database initialization", "mock database", "sample database"], "state": 2, "file_id": 39, "knowledge_revision": 101, "git_revision": "", "ctags": [{"_type": "tag", "name": "DB_DIR", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^const DB_DIR = path.dirname(DB_PATH);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "DB_PATH", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^const DB_PATH = path.resolve(config.maxmind.dbPath);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "MAXMIND_DOWNLOAD_URL", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^const MAXMIND_DOWNLOAD_URL = 'https:\\/\\/download.maxmind.com\\/app\\/geoip_download';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "SAMPLE_DB_URL", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^const SAMPLE_DB_URL = 'https:\\/\\/github.com\\/GitHubRepoName\\/mock-geoip-db\\/raw\\/main\\/GeoLite2-/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "args", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^const args = process.argv.slice(2);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "checkDatabaseExists", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^const checkDatabaseExists = () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "config", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^const config = require('..\\/config');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "createMockDatabase", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^const createMockDatabase = async () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "dbExists", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^    const dbExists = checkDatabaseExists();$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "downloadOfficialDatabase", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^const downloadOfficialDatabase = (key) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "downloadSampleDatabase", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^const downloadSampleDatabase = () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "forceDownload", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^const forceDownload = args.includes('--force');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "fs", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^const fs = require('fs');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "https", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^const https = require('https');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "initializeGeoIP", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^const initializeGeoIP = async () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "initializeGeoIP", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^module.exports = { initializeGeoIP };$/", "language": "JavaScript", "kind": "field", "scope": "module.exports", "scopeKind": "class"}, {"_type": "tag", "name": "licenseKey", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^let licenseKey = null;$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "licenseKeyArg", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^const licenseKeyArg = args.find(arg => arg.startsWith('--license-key='));$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^const logger = require('..\\/utils\\/logger');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "mockDbContent", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^    const mockDbContent = Buffer.from('MOCK_GEOIP_DATABASE');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "mockSuccess", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^    const mockSuccess = await createMockDatabase();$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^const path = require('path');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "sampleSuccess", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^    const sampleSuccess = await downloadSampleDatabase();$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "success", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "pattern": "/^      const success = await downloadOfficialDatabase(licenseKey);$/", "language": "JavaScript", "kind": "constant"}], "filename": "/home/kavia/workspace/mock-OTT-API-Claro/src/scripts/init-geoip.js", "hash": "a49e5c605cde8ecc3da5bad00539be95", "format-version": 4, "code-base-name": "default", "fields": [{"name": "module.exports = { initializeGeoIP };", "scope": "module.exports", "scopeKind": "class", "description": "unavailable"}, {"name": "let licenseKey = null;", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"101": ""}]}