{"is_source_file": true, "format": "JavaScript", "description": "Utility functions for handling and validating IP addresses, including functionality for IPv4 and IPv6.", "external_files": [], "external_methods": ["require('net').Address6"], "published": ["isValidIpv4Address", "isValidIpv6Address", "isValidIpAddress", "normalizeIpAddress", "getIpAddressType", "parseIpFromRequest"], "classes": [], "methods": [{"name": "isValidIpv4Address", "description": "Validates if a string is a valid IPv4 address."}, {"name": "isValidIpv6Address", "description": "Validates if a string is a valid IPv6 address."}, {"name": "isValidIpAddress", "description": "Validates if a string is a valid IP address (IPv4 or IPv6)."}, {"name": "normalizeIpAddress", "description": "Normalizes an IP address format, ensuring it is properly formatted."}, {"name": "getIpAddressType", "description": "Determines if an IP address is IPv4 or IPv6."}, {"name": "parseIpFromRequest", "description": "Extracts the client IP address from an Express request object."}], "calls": ["isValidIpv4Address(ip)", "isValidIpv6Address(ip)", "require('net').Address6(ip)"], "search-terms": ["IP validation", "IPv4", "IPv6", "normalize IP address", "extract client IP"], "state": 2, "file_id": 15, "knowledge_revision": 32, "git_revision": "", "ctags": [{"_type": "tag", "name": "getIpAddressType", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/geoip.utils.js", "pattern": "/^const getIpAddressType = (ip) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "ip", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/geoip.utils.js", "pattern": "/^  const ip = $/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "ipv4Regex", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/geoip.utils.js", "pattern": "/^  const ipv4Regex = \\/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "ipv6Regex", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/geoip.utils.js", "pattern": "/^  const ipv6Regex = \\/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "isValidIpAddress", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/geoip.utils.js", "pattern": "/^const isValidIpAddress = (ip) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "isValidIpv4Address", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/geoip.utils.js", "pattern": "/^  isValidIpv4Address,$/", "language": "JavaScript", "kind": "field", "scope": "module.exports", "scopeKind": "class"}, {"_type": "tag", "name": "isValidIpv4Address", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/geoip.utils.js", "pattern": "/^const isValidIpv4Address = (ip) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "isValidIpv6Address", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/geoip.utils.js", "pattern": "/^const isValidIpv6Address = (ip) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "normalizeIpAddress", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/geoip.utils.js", "pattern": "/^const normalizeIpAddress = (ip) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "parseIpFromRequest", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/geoip.utils.js", "pattern": "/^const parseIpFromRequest = (req) => {$/", "language": "JavaScript", "kind": "constant"}], "filename": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/geoip.utils.js", "hash": "356fdcbf313877fec8dc65a07879cbcb", "format-version": 4, "code-base-name": "default", "fields": [{"name": "isValidIpv4Address,", "scope": "module.exports", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"32": ""}]}