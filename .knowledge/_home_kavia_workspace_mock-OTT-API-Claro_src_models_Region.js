{"is_source_file": true, "format": "JavaScript", "description": "Defines a Mongoose schema for geographical regions, including their names, codes, descriptions, populations, areas, and active status. The schema includes methods for data manipulation and retrieval, such as methods to get regions with country counts.", "external_files": ["mongoose"], "external_methods": ["mongoose.model", "mongoose.Schema", "RegionSchema.pre", "RegionSchema.virtual", "RegionSchema.statics.getRegionsWithCountryCounts"], "published": ["Region"], "classes": [], "methods": [{"name": "getRegionsWithCountryCounts()", "description": "A static method on the Region model that retrieves regions along with their associated country counts.", "scope": "RegionSchema.statics", "scopeKind": "function"}, {"name": "AnonymousFunctionb3e1a5c00100(doc, ret)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "AnonymousFunctionb3e1a5c00200(doc, ret)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "AnonymousFunctionb3e1a5c00300(next)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["mongoose.model('Region', RegionSchema)", "this.aggregate"], "search-terms": ["RegionSchema", "getRegionsWithCountryCounts", "Region"], "state": 2, "file_id": 12, "knowledge_revision": 28, "git_revision": "c24749f3325b08472f3dec77e682a4895874ade7", "ctags": [{"_type": "tag", "name": "AnonymousFunctionb3e1a5c00100", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/Region.js", "pattern": "/^    transform: function(doc, ret) {$/", "language": "JavaScript", "kind": "function", "signature": "(doc, ret)"}, {"_type": "tag", "name": "AnonymousFunctionb3e1a5c00200", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/Region.js", "pattern": "/^    transform: function(doc, ret) {$/", "language": "JavaScript", "kind": "function", "signature": "(doc, ret)"}, {"_type": "tag", "name": "AnonymousFunctionb3e1a5c00300", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/Region.js", "pattern": "/^RegionSchema.pre('save', function(next) {$/", "language": "JavaScript", "kind": "function", "signature": "(next)"}, {"_type": "tag", "name": "Region", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/Region.js", "pattern": "/^const Region = mongoose.model('Region', RegionSchema);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "RegionSchema", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/Region.js", "pattern": "/^const RegionSchema = new Schema({$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "Schema", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/Region.js", "pattern": "/^const Schema = mongoose.Schema;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getRegionsWithCountryCounts", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/Region.js", "pattern": "/^RegionSchema.statics.getRegionsWithCountryCounts = async function() {$/", "language": "JavaScript", "kind": "function", "signature": "()", "scope": "RegionSchema.statics", "scopeKind": "function"}, {"_type": "tag", "name": "mongoose", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/Region.js", "pattern": "/^const mongoose = require('mongoose');$/", "language": "JavaScript", "kind": "constant"}], "filename": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/Region.js", "hash": "9b7d931acecd098e683a3c9a2fb25c5f", "format-version": 4, "code-base-name": "default", "revision_history": [{"28": "c24749f3325b08472f3dec77e682a4895874ade7"}]}