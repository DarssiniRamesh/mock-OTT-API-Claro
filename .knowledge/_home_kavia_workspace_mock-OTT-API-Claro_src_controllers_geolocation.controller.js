{"is_source_file": true, "format": "JavaScript", "description": "A controller for handling geolocation-related HTTP requests in an Express application.", "external_files": ["../services/geolocation.service", "../utils/geoip.utils", "../utils/logger"], "external_methods": ["geolocationService.getLocationFromIp", "geolocationService.getRegionConfigurations", "geolocationService.getCountryConfigurations", "geolocationService.getConfigurationsByLocation", "geolocationService.validateLocationOverride", "geolocationService.clearCache"], "published": ["detectLocation", "getRegionConfig", "getCountryConfig", "getLocationConfig", "overrideLocation", "clearLocationOverride", "clearCache"], "classes": [], "methods": [{"name": "detectLocation", "description": "Detects the location of the client based on their IP address. Returns location data or an error response."}, {"name": "getRegionConfig", "description": "Retrieves region-specific configurations based on the provided region code and type."}, {"name": "getCountryConfig", "description": "Retrieves country-specific configurations based on the provided country code and type."}, {"name": "getLocationConfig", "description": "Gets configurations based on the client's detected location."}, {"name": "overrideLocation", "description": "Overrides the location for the current session based on the provided location in the request body."}, {"name": "clearLocationOverride", "description": "Clears any location overrides stored in the current session."}, {"name": "clearCache", "description": "Clears geolocation caches based on the specified type."}], "calls": ["logger.debug", "logger.error"], "search-terms": ["geolocation controller", "location detection", "region configuration", "country configuration", "session override"], "state": 2, "file_id": 27, "knowledge_revision": 58, "git_revision": "", "ctags": [{"_type": "tag", "name": "clearCache", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^const clearCache = async (req, res) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "clearLocationOverride", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^const clearLocationOverride = async (req, res) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "clearedCount", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^    const clearedCount = geolocationService.clearCache(type || 'all');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "config", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^    const config = await geolocationService.getConfigurationsByLocation(location, type);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "config", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^    const config = await geolocationService.getCountryConfigurations(countryCode, type);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "config", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^    const config = await geolocationService.getRegionConfigurations(regionCode, type);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "detectLocation", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^  detectLocation,$/", "language": "JavaScript", "kind": "field", "scope": "module.exports", "scopeKind": "class"}, {"_type": "tag", "name": "detectLocation", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^const detectLocation = async (req, res) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "geolocationService", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^const geolocationService = require('..\\/services\\/geolocation.service');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getCountryConfig", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^const getCountryConfig = async (req, res) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getLocationConfig", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^const getLocationConfig = async (req, res) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getRegionConfig", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^const getRegionConfig = async (req, res) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "ip", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^    const ip = req.query.ip || parseIpFromRequest(req);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "location", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^    const location = await geolocationService.getLocationFromIp(ip);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "location", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^    let location;$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^const logger = require('..\\/utils\\/logger');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "overrideLocation", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^const overrideLocation = async (req, res) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "validTypes", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^    const validTypes = ['location', 'config', 'all'];$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "validation", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "pattern": "/^    const validation = geolocationService.validateLocationOverride(location);$/", "language": "JavaScript", "kind": "constant"}], "filename": "/home/kavia/workspace/mock-OTT-API-Claro/src/controllers/geolocation.controller.js", "hash": "f834a519efef2eeb049f642dfbad0cf7", "format-version": 4, "code-base-name": "default", "fields": [{"name": "detectLocation,", "scope": "module.exports", "scopeKind": "class", "description": "unavailable"}, {"name": "let location;", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"58": ""}]}