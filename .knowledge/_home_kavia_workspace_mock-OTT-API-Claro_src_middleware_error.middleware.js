{"is_source_file": true, "format": "JavaScript", "description": "Error middleware for an Express application that centralizes error handling, including 404 errors and logging of operational and programming errors.", "external_files": ["../utils/logger", "../utils/errors"], "external_methods": ["logger.generateRequestId", "logger.setRequestId", "logger.createRequestLogger"], "published": ["requestIdMiddleware", "notFoundMiddleware", "errorHandlerMiddleware", "asyncHandler"], "classes": [], "methods": [{"name": "requestIdMiddleware", "description": "Adds a unique request ID to each request."}, {"name": "notFoundMiddleware", "description": "Handles 404 errors for routes that don't exist."}, {"name": "errorHandlerMiddleware", "description": "Handles all errors in the application."}, {"name": "asyncHandler", "description": "Catches errors in async route handlers."}], "calls": ["logger.generateRequestId", "logger.setRequestId", "logger.createRequestLogger"], "search-terms": ["Error Middleware", "Express Error Handling"], "state": 2, "file_id": 32, "knowledge_revision": 72, "git_revision": "02d617c5b706becf6329932da6df3d1e5e39ba93", "ctags": [{"_type": "tag", "name": "asyncHandler", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/middleware/error.middleware.js", "pattern": "/^const asyncHandler = (fn) => (req, res, next) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/middleware/error.middleware.js", "pattern": "/^    error: {$/", "language": "JavaScript", "kind": "property", "scope": "errorResponse", "scopeKind": "class"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/middleware/error.middleware.js", "pattern": "/^  const error = new Error(`Not Found - ${req.originalUrl}`);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "errorCode", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/middleware/error.middleware.js", "pattern": "/^  const errorCode = err.errorCode || 'INTERNAL_SERVER_ERROR';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "errorHandlerMiddleware", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/middleware/error.middleware.js", "pattern": "/^const errorHandlerMiddleware = (err, req, res, next) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "errorResponse", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/middleware/error.middleware.js", "pattern": "/^  const errorResponse = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "isOperationalError", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/middleware/error.middleware.js", "pattern": "/^  const isOperationalError = err instanceof BaseError ? err.isOperational : false;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/middleware/error.middleware.js", "pattern": "/^const logger = require('..\\/utils\\/logger');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/middleware/error.middleware.js", "pattern": "/^      message,$/", "language": "JavaScript", "kind": "field", "scope": "errorResponse.error", "scopeKind": "class"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/middleware/error.middleware.js", "pattern": "/^  const message = err.message || 'Something went wrong';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "notFoundMiddleware", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/middleware/error.middleware.js", "pattern": "/^const notFoundMiddleware = (req, res, next) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "reqLogger", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/middleware/error.middleware.js", "pattern": "/^  const reqLogger = logger.createRequestLogger(req);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "requestId", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/middleware/error.middleware.js", "pattern": "/^  const requestId = logger.generateRequestId();$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "requestIdMiddleware", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/middleware/error.middleware.js", "pattern": "/^  requestIdMiddleware,$/", "language": "JavaScript", "kind": "field", "scope": "module.exports", "scopeKind": "class"}, {"_type": "tag", "name": "requestIdMiddleware", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/middleware/error.middleware.js", "pattern": "/^const requestIdMiddleware = (req, res, next) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "statusCode", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/middleware/error.middleware.js", "pattern": "/^  const statusCode = err.statusCode || 500;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "success", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/middleware/error.middleware.js", "pattern": "/^    success: false,$/", "language": "JavaScript", "kind": "property", "scope": "errorResponse", "scopeKind": "class"}], "filename": "/home/kavia/workspace/mock-OTT-API-Claro/src/middleware/error.middleware.js", "hash": "e6a0cb5e2a42c018afd0bee37d33a9d8", "format-version": 4, "code-base-name": "default", "fields": [{"name": "error: {", "scope": "errorResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "message,", "scope": "errorResponse.error", "scopeKind": "class", "description": "unavailable"}, {"name": "requestIdMiddleware,", "scope": "module.exports", "scopeKind": "class", "description": "unavailable"}, {"name": "success: false,", "scope": "errorResponse", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"72": "02d617c5b706becf6329932da6df3d1e5e39ba93"}]}