{"is_source_file": true, "format": "JavaScript", "description": "This file contains the authentication service for a Node.js application, handling JWT token generation and management, including access and refresh tokens.", "external_files": ["../config", "../models/User", "../models/Token", "../utils/logger"], "external_methods": ["User.findByLogin", "User.comparePassword", "User.incrementLoginAttempts", "User.resetLoginAttempts", "User.findById", "Token.create", "Token.findOne", "Token.cleanupExpiredTokens"], "published": ["authenticate", "refreshToken", "revokeToken", "verifyToken", "isTokenBlacklisted", "cleanupExpiredTokens"], "classes": [], "methods": [{"name": "_generateToken", "description": "Generates a JWT token from the given payload, secret and expiration time."}, {"name": "_generateAccessToken", "description": "Generates an access token for a user based on their information."}, {"name": "_generateRefreshToken", "description": "Generates a refresh token for a user and saves it to the database."}, {"name": "authenticate", "description": "Auth user and generates both access and refresh tokens."}, {"name": "refreshToken", "description": "Refreshes the access token using the provided refresh token."}, {"name": "revokeToken", "description": "Revokes a refresh token by marking it as blacklisted in the database."}, {"name": "verifyToken", "description": "Verifies the provided JWT token and returns its decoded payload."}, {"name": "isTokenBlacklisted", "description": "Checks whether a JWT token is blacklisted."}, {"name": "cleanupExpiredTokens", "description": "Cleans up expired tokens from the database."}], "calls": ["jwt.sign", "jwt.verify", "Token.create", "logger.warn", "logger.info", "logger.error"], "search-terms": ["JWT", "authentication", "token management", "accessToken", "refreshToken"], "state": 2, "file_id": 19, "knowledge_revision": 41, "git_revision": "", "ctags": [{"_type": "tag", "name": "Token", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^const Token = require('..\\/models\\/Token');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^const User = require('..\\/models\\/User');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "_generateAccessToken", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^const _generateAccessToken = (user) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "_generateRefreshToken", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^const _generateRefreshToken = async (user, ipAddress) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "_generateToken", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^const _generateToken = (payload, secret, expiresIn) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "accessToken", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^    const accessToken = _generateAccessToken(user);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "authenticate", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^  authenticate,$/", "language": "JavaScript", "kind": "field", "scope": "module.exports", "scopeKind": "class"}, {"_type": "tag", "name": "authenticate", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^const authenticate = async (username, password, ipAddress) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "blacklistedToken", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^    const blacklistedToken = await Token.findOne({$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "cleanupExpiredTokens", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^const cleanupExpiredTokens = async () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "config", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^const config = require('..\\/config');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "decoded", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^    const decoded = jwt.verify(token, config.jwt.secret);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^    email: user.email,$/", "language": "JavaScript", "kind": "property", "scope": "payload", "scopeKind": "class"}, {"_type": "tag", "name": "expiresAt", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^  const expiresAt = new Date(Date.now() + expiresInMs);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "expiresIn", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^  const expiresIn = '7d';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "expiresIn", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^  const expiresIn = config.jwt.expiresIn;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "expiresInMs", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^  const expiresInMs = 7 * 24 * 60 * 60 * 1000; \\/\\/ 7 days in milliseconds$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "expiresInMs", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^  const expiresInMs = parseInt(expiresIn) * 1000 || 3600000; \\/\\/ Default to 1 hour if parsing f/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "isPasswordValid", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^    const isPasswordValid = await user.comparePassword(password);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "isTokenBlacklisted", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^const isTokenBlacklisted = async (token) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "jwt", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^const jwt = require('jsonwebtoken');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^const logger = require('..\\/utils\\/logger');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "newRefreshToken", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^    const newRefreshToken = await _generateRefreshToken(user, ipAddress);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "payload", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^    const payload = jwt.verify(token, config.jwt.secret);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "payload", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^  const payload = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "refreshToken", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^    const refreshToken = await _generateRefreshToken(user, ipAddress);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "refreshToken", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^const refreshToken = async (token, ipAddress) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "revokeToken", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^const revokeToken = async (token, ipAddress) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "roles", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^    roles: user.roles,$/", "language": "JavaScript", "kind": "property", "scope": "payload", "scopeKind": "class"}, {"_type": "tag", "name": "storedToken", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^    const storedToken = await Token.findOne({$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "sub", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^    sub: user.id,$/", "language": "JavaScript", "kind": "property", "scope": "payload", "scopeKind": "class"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^  const token = _generateToken($/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "type", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^    type: 'refresh',$/", "language": "JavaScript", "kind": "property", "scope": "payload", "scopeKind": "class"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^    const user = await User.findById(payload.sub);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^    const user = await User.findByLogin(username).select('+password');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^    username: user.username,$/", "language": "JavaScript", "kind": "property", "scope": "payload", "scopeKind": "class"}, {"_type": "tag", "name": "verifyToken", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "pattern": "/^const verifyToken = (token) => {$/", "language": "JavaScript", "kind": "constant"}], "filename": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/auth.service.js", "hash": "e50886006e152726839abe00ee95944c", "format-version": 4, "code-base-name": "default", "fields": [{"name": "authenticate,", "scope": "module.exports", "scopeKind": "class", "description": "unavailable"}, {"name": "email: user.email,", "scope": "payload", "scopeKind": "class", "description": "unavailable"}, {"name": "roles: user.roles,", "scope": "payload", "scopeKind": "class", "description": "unavailable"}, {"name": "sub: user.id,", "scope": "payload", "scopeKind": "class", "description": "unavailable"}, {"name": "type: 'refresh',", "scope": "payload", "scopeKind": "class", "description": "unavailable"}, {"name": "username: user.username,", "scope": "payload", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"41": ""}]}