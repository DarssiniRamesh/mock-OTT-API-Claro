{"is_source_file": true, "file_id": 16, "git_revision": "", "state": 1, "description": "", "external_files": [], "external_methods": [], "published": [], "classes": [], "methods": [], "calls": [], "search-terms": [], "ctags": [{"_type": "tag", "name": "CACHE_MAX_SIZE", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^const CACHE_MAX_SIZE = 1000; \\/\\/ Maximum number of entries in the cache$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "CACHE_TTL", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^const CACHE_TTL = 3600000; \\/\\/ 1 hour in milliseconds$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "accuracy_radius", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^        accuracy_radius: result.location.accuracy_radius,$/", "language": "JavaScript", "kind": "property", "scope": "locationData.location", "scopeKind": "class"}, {"_type": "tag", "name": "cache", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^const cache = new Map();$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "cachedResult", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^      const cachedResult = cache.get(normalizedIp);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "city", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^      city: result.city ? {$/", "language": "JavaScript", "kind": "class", "scope": "locationData", "scopeKind": "class"}, {"_type": "tag", "name": "cleanupCache", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^const cleanupCache = () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "clearCache", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^const clearCache = () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "code", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^        code: result.continent.code,$/", "language": "JavaScript", "kind": "property", "scope": "locationData.continent", "scopeKind": "class"}, {"_type": "tag", "name": "code", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^        code: result.country.iso_code,$/", "language": "JavaScript", "kind": "property", "scope": "locationData.country", "scopeKind": "class"}, {"_type": "tag", "name": "code", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^        code: result.postal.code,$/", "language": "JavaScript", "kind": "property", "scope": "locationData.postal", "scopeKind": "class"}, {"_type": "tag", "name": "code", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^        code: result.subdivisions[0].iso_code,$/", "language": "JavaScript", "kind": "property", "scope": "locationData.region", "scopeKind": "class"}, {"_type": "tag", "name": "config", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^const config = require('..\\/config');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "continent", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^      continent: result.continent ? {$/", "language": "JavaScript", "kind": "class", "scope": "locationData", "scopeKind": "class"}, {"_type": "tag", "name": "country", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^      country: result.country ? {$/", "language": "JavaScript", "kind": "class", "scope": "locationData", "scopeKind": "class"}, {"_type": "tag", "name": "dbDir", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^  const dbDir = path.dirname(dbPath);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "dbPath", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^    const dbPath = path.resolve(config.maxmind.dbPath);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "dbPath", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^  const dbPath = path.resolve(config.maxmind.dbPath);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "deletedCount", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^  let deletedCount = 0;$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "entriesToDelete", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^    const entriesToDelete = [...cache.entries()]$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "fs", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^const fs = require('fs');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getCacheStats", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^const getCacheStats = () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getCityByIp", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^const getCityByIp = async (ip) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getCoordinatesByIp", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^const getCoordinatesByIp = async (ip) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getCountryByIp", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^const getCountryByIp = async (ip) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getLocationByIp", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^const getLocationByIp = async (ip) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getRegionByIp", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^const getRegionByIp = async (ip) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "https", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^const https = require('https');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "initialize", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^  initialize,$/", "language": "JavaScript", "kind": "field", "scope": "module.exports", "scopeKind": "class"}, {"_type": "tag", "name": "initialize", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^const initialize = async () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "initialized", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^      const initialized = await initialize();$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "ip", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^      ip: normalizedIp,$/", "language": "JavaScript", "kind": "property", "scope": "locationData", "scopeKind": "class"}, {"_type": "tag", "name": "latitude", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^        latitude: result.location.latitude,$/", "language": "JavaScript", "kind": "property", "scope": "locationData.location", "scopeKind": "class"}, {"_type": "tag", "name": "location", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^      location: result.location ? {$/", "language": "JavaScript", "kind": "class", "scope": "locationData", "scopeKind": "class"}, {"_type": "tag", "name": "location", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^  const location = await getLocationByIp(ip);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "locationData", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^    const locationData = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^const logger = require('..\\/utils\\/logger');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "longitude", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^        longitude: result.location.longitude,$/", "language": "JavaScript", "kind": "property", "scope": "locationData.location", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^        name: result.city.names ? result.city.names.en : null,$/", "language": "JavaScript", "kind": "property", "scope": "locationData.city", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^        name: result.continent.names ? result.continent.names.en : null,$/", "language": "JavaScript", "kind": "property", "scope": "locationData.continent", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^        name: result.country.names ? result.country.names.en : null,$/", "language": "JavaScript", "kind": "property", "scope": "locationData.country", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^        name: result.subdivisions[0].names ? result.subdivisions[0].names.en : null,$/", "language": "JavaScript", "kind": "property", "scope": "locationData.region", "scopeKind": "class"}, {"_type": "tag", "name": "normalizedIp", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^    const normalizedIp = normalizeIpAddress(ip);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^  const now = Date.now();$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^const path = require('path');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "postal", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^      postal: result.postal ? {$/", "language": "JavaScript", "kind": "class", "scope": "locationData", "scopeKind": "class"}, {"_type": "tag", "name": "reader", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^let reader = null;$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "region", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^      region: result.subdivisions && result.subdivisions.length > 0 ? {$/", "language": "JavaScript", "kind": "class", "scope": "locationData", "scopeKind": "class"}, {"_type": "tag", "name": "result", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^    const result = reader.get(normalizedIp);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "size", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^  const size = cache.size;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "tempPath", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^  const tempPath = path.join(dbDir, `${edition}.mmdb.gz`);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "time_zone", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^        time_zone: result.location.time_zone,$/", "language": "JavaScript", "kind": "property", "scope": "locationData.location", "scopeKind": "class"}, {"_type": "tag", "name": "timestamp", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^      timestamp: new Date().toISOString(),$/", "language": "JavaScript", "kind": "property", "scope": "locationData", "scopeKind": "class"}, {"_type": "tag", "name": "updateDatabase", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^const updateDatabase = async (licenseKey, edition = 'GeoLite2-City') => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "pattern": "/^    const url = `https:\\/\\/download.maxmind.com\\/app\\/geoip_download?edition_id=${edition}&licen/", "language": "JavaScript", "kind": "constant"}], "format": "JavaScript", "filename": "/home/kavia/workspace/mock-OTT-API-Claro/src/services/geoip.service.js", "hash": "3dd113c479b251dec7cbc7090bb9f35a", "format-version": 4, "code-base-name": "default", "knowledge_revision": 33}