{"is_source_file": true, "format": "JavaScript", "description": "Unit tests for the GeoIP Service, including methods for initializing the database, getting location data from an IP address, and handling initialization, lookup, and database update errors.", "external_files": ["../../../src/services/geoip.service", "../../../src/utils/geoip.utils", "../../../src/utils/logger", "../../../src/config"], "external_methods": ["geoipService.initialize", "geoipService.getLocationByIp", "geoipUtils.isValidIpAddress", "geoipUtils.normalizeIpAddress", "geoipService.updateDatabase", "geoipService.getCountryByIp", "geoipService.getRegionByIp", "geoipService.getCityByIp", "geoipService.getCoordinatesByIp", "geoipService.clearCache", "geoipService.getCacheStats"], "published": [], "classes": [], "methods": [{"name": "AnonymousFunctione07d79b70100(event, callback)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "AnonymousFunctione07d79b70200(event, callback)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "AnonymousFunctione07d79b70300(event, callback)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "AnonymousFunctione07d79b70400(event, callback)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["fs.existsSync", "maxmind.Reader.open", "logger.info", "logger.warn", "logger.error", "jest.clearAllMocks", "geoipUtils.isValidIpAddress.mockImplementation", "geoipUtils.normalizeIpAddress.mockImplementation", "https.get", "fs.createWriteStream"], "search-terms": ["GeoIP Service", "initialize", "getLocationByIp", "updateDatabase", "clearCache", "getCacheStats"], "state": 2, "file_id": 38, "knowledge_revision": 97, "git_revision": "", "revision_history": [{"85": ""}, {"86": ""}, {"87": ""}, {"88": ""}, {"89": ""}, {"90": ""}, {"91": ""}, {"92": ""}, {"93": ""}, {"94": ""}, {"95": ""}, {"96": ""}, {"97": ""}], "ctags": [{"_type": "tag", "name": "AnonymousFunctione07d79b70100", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geoip.service.test.js", "pattern": "/^        on: jest.fn().mockImplementation(function(event, callback) {$/", "language": "JavaScript", "kind": "function", "signature": "(event, callback)"}, {"_type": "tag", "name": "AnonymousFunctione07d79b70200", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geoip.service.test.js", "pattern": "/^          on: jest.fn().mockImplementation(function(event, callback) {$/", "language": "JavaScript", "kind": "function", "signature": "(event, callback)"}, {"_type": "tag", "name": "AnonymousFunctione07d79b70300", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geoip.service.test.js", "pattern": "/^          on: jest.fn().mockImplementation(function(event, callback) {$/", "language": "JavaScript", "kind": "function", "signature": "(event, callback)"}, {"_type": "tag", "name": "AnonymousFunctione07d79b70400", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geoip.service.test.js", "pattern": "/^          on: jest.fn().mockImplementation(function(event, callback) {$/", "language": "JavaScript", "kind": "function", "signature": "(event, callback)"}, {"_type": "tag", "name": "config", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geoip.service.test.js", "pattern": "/^const config = require('..\\/..\\/..\\/src\\/config');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "fs", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geoip.service.test.js", "pattern": "/^const fs = require('fs');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "geoipService", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geoip.service.test.js", "pattern": "/^const geoipService = require('..\\/..\\/..\\/src\\/services\\/geoip.service');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "geoipUtils", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geoip.service.test.js", "pattern": "/^const geoipUtils = require('..\\/..\\/..\\/src\\/utils\\/geoip.utils');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "https", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geoip.service.test.js", "pattern": "/^const https = require('https');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geoip.service.test.js", "pattern": "/^const logger = require('..\\/..\\/..\\/src\\/utils\\/logger');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "maxmind", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geoip.service.test.js", "pattern": "/^const maxmind = require('maxmind');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geoip.service.test.js", "pattern": "/^const path = require('path');$/", "language": "JavaScript", "kind": "constant"}], "filename": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geoip.service.test.js", "hash": "8e984a1672e4e5400bb0720cf2f94c3f", "format-version": 4, "code-base-name": "default"}