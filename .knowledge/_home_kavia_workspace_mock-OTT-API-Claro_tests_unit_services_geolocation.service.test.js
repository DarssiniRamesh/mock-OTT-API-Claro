{"is_source_file": true, "format": "JavaScript", "description": "Unit tests for the Geolocation Service, including methods for location detection, cache management, and configuration retrieval.", "external_files": ["../../../src/services/geoip.service", "../../../src/services/cache.service", "../../../src/utils/geoip.utils", "../../../src/utils/logger", "../../../src/models/Region", "../../../src/models/Country", "../../../src/models/RegionConfig"], "external_methods": ["mongoose", "jest.mock", "geoipService.getLocationFromIp", "cacheService.get", "Region.findOne", "Country.findOne", "RegionConfig.getConfigsByRegion"], "published": ["getLocationFromIp", "getRegionConfigurations", "getCountryConfigurations", "getConfigurationsByLocation", "validateLocationOverride", "clearCache"], "classes": [], "methods": [{"name": "getLocationFromIp", "description": "Retrieves location data based on IP address, including handling cache and GeoIP service responses."}, {"name": "getRegionConfigurations", "description": "Fetches region configurations or retrieves them from cache if available."}, {"name": "getCountryConfigurations", "description": "Retrieves country-specific configurations from cache or services."}, {"name": "getConfigurationsByLocation", "description": "Obtains configurations based on geographical location, favoring country configurations."}, {"name": "validateLocationOverride", "description": "Validates the location override object to ensure proper country and region formats."}, {"name": "clearCache", "description": "Clears caches for geolocation data based on specified types."}, {"name": "AnonymousFunctiond271e7570100()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["jest.clearAllMocks()", "isValidIpAddress.mockImplementation", "normalizeIpAddress.mockImplementation", "cacheService.get.mockReturnValueOnce", "geoipService.getLocationByIp.mockResolvedValueOnce", "Country.findOne.mockResolvedValueOnce", "logger.warn()", "logger.debug()", "logger.error()"], "search-terms": ["Geolocation Service", "unit tests", "IP address lookup", "cache management"], "state": 2, "file_id": 46, "knowledge_revision": 159, "git_revision": "", "revision_history": [{"152": ""}, {"153": ""}, {"154": ""}, {"155": ""}, {"156": ""}, {"157": ""}, {"158": ""}, {"159": ""}], "ctags": [{"_type": "tag", "name": "AnonymousFunctiond271e7570100", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geolocation.service.test.js", "pattern": "/^    populate: jest.fn().mockImplementation(function() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "Country", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geolocation.service.test.js", "pattern": "/^const Country = require('..\\/..\\/..\\/src\\/models\\/Country');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "Region", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geolocation.service.test.js", "pattern": "/^const Region = require('..\\/..\\/..\\/src\\/models\\/Region');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "RegionConfig", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geolocation.service.test.js", "pattern": "/^const RegionConfig = require('..\\/..\\/..\\/src\\/models\\/RegionConfig');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "cacheService", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geolocation.service.test.js", "pattern": "/^const cacheService = require('..\\/..\\/..\\/src\\/services\\/cache.service');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "geoipService", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geolocation.service.test.js", "pattern": "/^const geoipService = require('..\\/..\\/..\\/src\\/services\\/geoip.service');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "geolocationService", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geolocation.service.test.js", "pattern": "/^const geolocationService = require('..\\/..\\/..\\/src\\/services\\/geolocation.service');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geolocation.service.test.js", "pattern": "/^const logger = require('..\\/..\\/..\\/src\\/utils\\/logger');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "mongoose", "path": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geolocation.service.test.js", "pattern": "/^const mongoose = require('mongoose');$/", "language": "JavaScript", "kind": "constant"}], "filename": "/home/kavia/workspace/mock-OTT-API-Claro/tests/unit/services/geolocation.service.test.js", "hash": "944ab2f75fe0c5e42c0b1d06ef35e468", "format-version": 4, "code-base-name": "default"}