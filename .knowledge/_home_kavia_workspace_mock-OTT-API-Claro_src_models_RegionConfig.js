{"is_source_file": true, "format": "JavaScript", "description": "Defines the RegionConfig schema for a MongoDB database using Mongoose, representing configuration settings for geographical regions.", "external_files": ["mongoose"], "external_methods": ["mongoose.model"], "published": ["RegionConfig"], "classes": [], "methods": [{"name": "getConfigsByRegion(regionId)", "description": "Static method to get configurations for a specific region.", "scope": "RegionConfigSchema.statics", "scopeKind": "function"}, {"name": "getConfigByType(regionId, configType)", "description": "Static method to get a specific configuration type for a region.", "scope": "RegionConfigSchema.statics", "scopeKind": "function"}, {"name": "getConfigsByRegionCode(regionCode)", "description": "Static method to get configurations by region code.", "scope": "RegionConfigSchema.statics", "scopeKind": "function"}, {"name": "AnonymousFunctionfda5bd560100(doc, ret)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "AnonymousFunctionfda5bd560200(doc, ret)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["this.find", "this.findOne", "this.populate", "this.sort"], "search-terms": ["RegionConfig", "RegionConfigSchema", "configuration", "Mongoose", "region"], "state": 2, "file_id": 25, "knowledge_revision": 56, "git_revision": "", "ctags": [{"_type": "tag", "name": "AnonymousFunctionfda5bd560100", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/RegionConfig.js", "pattern": "/^    transform: function(doc, ret) {$/", "language": "JavaScript", "kind": "function", "signature": "(doc, ret)"}, {"_type": "tag", "name": "AnonymousFunctionfda5bd560200", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/RegionConfig.js", "pattern": "/^    transform: function(doc, ret) {$/", "language": "JavaScript", "kind": "function", "signature": "(doc, ret)"}, {"_type": "tag", "name": "RegionConfig", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/RegionConfig.js", "pattern": "/^const RegionConfig = mongoose.model('RegionConfig', RegionConfigSchema);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "RegionConfigSchema", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/RegionConfig.js", "pattern": "/^const RegionConfigSchema = new Schema({$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "Schema", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/RegionConfig.js", "pattern": "/^const Schema = mongoose.Schema;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getConfigByType", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/RegionConfig.js", "pattern": "/^RegionConfigSchema.statics.getConfigByType = async function(regionId, configType) {$/", "language": "JavaScript", "kind": "function", "signature": "(regionId, configType)", "scope": "RegionConfigSchema.statics", "scopeKind": "function"}, {"_type": "tag", "name": "getConfigsByRegion", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/RegionConfig.js", "pattern": "/^RegionConfigSchema.statics.getConfigsByRegion = async function(regionId) {$/", "language": "JavaScript", "kind": "function", "signature": "(regionId)", "scope": "RegionConfigSchema.statics", "scopeKind": "function"}, {"_type": "tag", "name": "getConfigsByRegionCode", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/RegionConfig.js", "pattern": "/^RegionConfigSchema.statics.getConfigsByRegionCode = async function(regionCode) {$/", "language": "JavaScript", "kind": "function", "signature": "(regionCode)", "scope": "RegionConfigSchema.statics", "scopeKind": "function"}, {"_type": "tag", "name": "mongoose", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/RegionConfig.js", "pattern": "/^const mongoose = require('mongoose');$/", "language": "JavaScript", "kind": "constant"}], "filename": "/home/kavia/workspace/mock-OTT-API-Claro/src/models/RegionConfig.js", "hash": "231614556f728b84c2533413bb3ef16f", "format-version": 4, "code-base-name": "default", "revision_history": [{"56": ""}]}