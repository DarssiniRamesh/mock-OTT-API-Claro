{"is_source_file": true, "format": "JavaScript", "description": "A utility for structured logging using Winston with support for rotating log files, mask sensitive information, and manage request IDs in the context of an Express application.", "external_files": ["../config"], "external_methods": ["require('winston')", "require('winston-daily-rotate-file')", "require('uuid')"], "published": ["logger", "generateRequestId", "getRequestId", "setRequestId", "createRequestLogger", "logWithContext", "maskSensitiveData", "REQUEST_ID_SYMBOL", "debug", "info", "warn", "error"], "classes": [], "methods": [{"name": "maskSensitiveData", "description": "Masks sensitive information in objects to prevent them from appearing in logs."}, {"name": "generateRequestId", "description": "Generates a unique UUID v4 for request identification."}, {"name": "getRequestId", "description": "Retrieves the request ID from the Express request object."}, {"name": "setRequestId", "description": "Sets a request ID on the Express request object."}, {"name": "createRequestLogger", "description": "Creates a logger instance that includes the request ID in its context."}, {"name": "logWithContext", "description": "Logs a message with context including request ID."}, {"name": "debug", "description": "Logs a message at the debug level with request context."}, {"name": "info", "description": "Logs a message at the info level with request context."}, {"name": "warn", "description": "Logs a message at the warn level with request context."}, {"name": "error", "description": "Logs a message at the error level with request context."}], "calls": ["logger.log", "logger.child"], "search-terms": ["logger utility", "Winston logging", "request ID management"], "state": 2, "file_id": 9, "knowledge_revision": 68, "git_revision": "02d617c5b706becf6329932da6df3d1e5e39ba93", "revision_history": [{"21": "608c8088c5f78938ad4d02c0d24fc9aae131849f"}, {"68": "02d617c5b706becf6329932da6df3d1e5e39ba93"}], "ctags": [{"_type": "tag", "name": "DailyRotateFile", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "pattern": "/^const DailyRotateFile = require('winston-daily-rotate-file');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "REQUEST_ID_SYMBOL", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "pattern": "/^const REQUEST_ID_SYMBOL = Symbol('requestId');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "SENSITIVE_FIELDS", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "pattern": "/^const SENSITIVE_FIELDS = [$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "config", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "pattern": "/^const config = require('..\\/config');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "createRequestLogger", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "pattern": "/^const createRequestLogger = (req) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "errorFileRotationTransport", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "pattern": "/^const errorFileRotationTransport = new DailyRotateFile({$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "fileRotationTransport", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "pattern": "/^const fileRotationTransport = new DailyRotateFile({$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "generateRequestId", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "pattern": "/^const generateRequestId = () => uuidv4();$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getRequestId", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "pattern": "/^const getRequestId = (req) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "logFormat", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "pattern": "/^const logFormat = winston.format.combine($/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "logWithContext", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "pattern": "/^const logWithContext = (level, message, req, meta = {}) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "pattern": "/^  logger,$/", "language": "JavaScript", "kind": "field", "scope": "module.exports", "scopeKind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "pattern": "/^const logger = winston.createLogger({$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "maskSensitiveData", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "pattern": "/^const maskSensitiveData = (obj) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "maskedObj", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "pattern": "/^  const maskedObj = { ...obj };$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "requestId", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "pattern": "/^  const requestId = getRequestId(req);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "setRequestId", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "pattern": "/^const setRequestId = (req, requestId) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "winston", "path": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "pattern": "/^const winston = require('winston');$/", "language": "JavaScript", "kind": "constant"}], "filename": "/home/kavia/workspace/mock-OTT-API-Claro/src/utils/logger.js", "hash": "bf3e217b84cdaed51fbd55c6fa50c241", "format-version": 4, "code-base-name": "default", "fields": [{"name": "logger,", "scope": "module.exports", "scopeKind": "class", "description": "unavailable"}]}